{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/cdk/text-field\";\nimport * as i6 from \"@angular/material/radio\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction ProfileFormComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" * User name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProfileFormComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getErrorMessage(), \" \");\n  }\n}\n\nexport let ProfileFormComponent = /*#__PURE__*/(() => {\n  class ProfileFormComponent {\n    constructor() {\n      this.profileForm = new FormGroup({\n        nombre: new FormControl('', Validators.required),\n        email: new FormControl('', [Validators.email, Validators.required]),\n        género: new FormControl(''),\n        bio: new FormControl('')\n      });\n      this.submitted = false; //used to show the error messages on submit\n    }\n\n    getErrorMessage() {\n      return this.profileForm.controls['email'].hasError('required') ? 'Email is required' : 'Invalid email pattern';\n    }\n\n    save() {\n      this.submitted = true;\n\n      if (!this.profileForm.valid) {\n        return;\n      }\n\n      console.table(this.profileForm.value);\n      this.submitted = false;\n    }\n\n  }\n\n  ProfileFormComponent.ɵfac = function ProfileFormComponent_Factory(t) {\n    return new (t || ProfileFormComponent)();\n  };\n\n  ProfileFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfileFormComponent,\n    selectors: [[\"app-profile-form\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[\"autocomplete\", \"off\", 1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"legacy\"], [\"matInput\", \"\", \"formControlName\", \"nombre\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"cdkTextareaAutosize\", \"\", \"rows\", \"4\", \"formControlName\", \"bio\"], [\"aria-label\", \"Select an option\", \"formControlName\", \"g\\u00E9nero\", \"color\", \"primary\"], [1, \"gender\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"value\", \"Other\"], [\"type\", \"submit\", \"matRipple\", \"\", 1, \"btn\"]],\n    template: function ProfileFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfileFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, ProfileFormComponent_mat_error_5_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵtemplate(10, ProfileFormComponent_mat_error_10_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Bio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"textarea\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-radio-group\", 6);\n        i0.ɵɵelementStart(16, \"mat-label\", 7);\n        i0.ɵɵtext(17, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-radio-button\", 8);\n        i0.ɵɵtext(19, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-radio-button\", 9);\n        i0.ɵɵtext(21, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-radio-button\", 10);\n        i0.ɵɵtext(23, \"Other\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵtext(25, \"SAVE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.profileForm.controls.nombre.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.profileForm.controls.email.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i2.MatLabel, i3.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i5.CdkTextareaAutosize, i6.MatRadioGroup, i6.MatRadioButton, i7.MatRipple, i2.MatError],\n    styles: [\".form-container[_ngcontent-%COMP%]{text-align:center;max-width:400px;margin:0 auto}mat-form-field[_ngcontent-%COMP%]{width:100%;margin:10px auto}mat-radio-group[_ngcontent-%COMP%]{display:block;margin:10px auto;width:100%;text-align:left}mat-radio-button[_ngcontent-%COMP%]{color:gray}.mat-radio-button[_ngcontent-%COMP%] ~ .mat-radio-button[_ngcontent-%COMP%]{margin-left:16px}.gender[_ngcontent-%COMP%]{display:block;width:100%;margin:10px auto;color:gray}button[type=submit][_ngcontent-%COMP%]{width:80px}\"]\n  });\n  return ProfileFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}